.TH SIMPLE_SHELL 1 "January 2025" "1.0" "Simple Shell Man Page"
.SH NAME
.B simple_shell
\- A simple Unix shell program for educational purposes
.SH SYNOPSIS
.B ./simple_shell
[command] [options] [FILE]
.SH COPYRIGHT
.B simple_shell
is Copyright (C) [Your Name] and licensed under the MIT license.
.SH DESCRIPTION
.B simple_shell
(Simple Shell) is a simplified command-line interpreter created as part of a Holberton School project, designed to simulate a basic Unix shell. The program is used to understand the inner workings of shell programming, such as parsing commands and executing external programs.
.B Overview
The simple shell program simulates basic functionalities of a Unix shell like
.B bash or 
.B dash. It can run both in interactive and non-interactive modes, executing commands entered by the user or provided as input via a file or pipe.
.SH OPTIONS
.B simple_shell
operates in both
.I interactive
and
.I non-interactive
mode.
The user can invoke
.B simple_shell
and begin working directly in the shell, or use it by feeding commands via redirection or pipes.

.SH ARGUMENTS
The first argument, argument 0, is understood to be the name of the program (`./simple_shell`). All subsequent arguments are passed as commands or options to the shell.

.SH INVOCATION
.B simple_shell
can be invoked in the following ways:
.IP 1
$ ./simple_shell
.IP 2
$ echo "command" | ./simple_shell
.IP 3
$ ./simple_shell < commands.txt
.SH BUILTIN COMMANDS
The following built-in commands are supported:
.IP "\fBexit\fR"
This command exits the shell. It takes no arguments. When the user types "exit", the shell terminates.
.IP "\fBenv\fR"
This command prints the current environment variables, displaying each one in the format `KEY=VALUE`.
.SH EXAMPLES
.IP 1
$ ./simple_shell
#cisfun$ ls
AUTHORS    core.457  execute_full_path.c  hsh  parse_and_execute.c  shell  shell_0.3
README.md  core.467  execute_pipe.c       man_1_simple_shell  remove_quotes.c  shell.c  simple_shell.h
#cisfun$ exit
$ 

.IP 2
$ echo "env" | ./simple_shell
USER=your_user
PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
HOME=/home/your_user
#cisfun$ exit
Exiting simple_shell...
$

.SH SHELL OPERATION
In interactive mode, when the shell starts, it displays a prompt (`#cisfun$`) and waits for the user to input commands. After each command, the shell executes it and prints the prompt again. In non-interactive mode, the program accepts input from files or pipes and executes the commands sequentially.

.SH EXIT STATUS
The shell returns an exit status of 0 on success and 1 in case of error. For example, if a command is not found or cannot be executed, the shell will return 1 and print an error message.

.SH SEE ALSO
.I execve(2),
.I fork(2),
.I read(2),
.I write(2),
.I waitpid(2)

.SH BUGS
There are no known bugs. Please report any issues with
.B simple_shell
to https://github.com/kanga-prog/holberton-simple_shell/issues

.SH AUTHOR
Brice Kanga
Wilfried Guele
Nomen Ratsimba
